<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="authority">
    <select id="selectTMenu" parameterType="int" resultType="Tmenu">
        select *
        from t_menu
        where p_id = #{pId}
    </select>

    <select id="selectByParentIdAndRoleId" parameterType="Map" resultType="Tmenu">
        select c.id,c.icon,c.name,c.url,c.p_id,c.state
        from t_role a,
             t_role_menu b,
             t_menu c
        where a.id = b.role_id
          and b.menu_id = c.id
          and c.p_id = #{pId}
          and a.id = #{roleId}
    </select>

    <select id="selectByParentIdAndRoleIds" parameterType="Map" resultType="Tmenu">
        select c.id,c.icon,c.name,c.url,c.p_id,c.state
        from t_role a,
        t_role_menu b,
        t_menu c
        where a.id = b.role_id
        and b.menu_id = c.id
        and c.p_id = #{pId}
        and a.id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectStoreByParentIdAndRoleIds" parameterType="Map" resultType="TStoreMenu">
        select c.id,c.icon,c.name,c.url,c.p_id,c.state,c.store_id,c.is_super_menu
        from t_store_role a,
        t_store_role_menu b,
        t_store_menu c
        where a.id = b.role_id
        and b.menu_id = c.id
        and c.p_id = #{pId}
        and c.store_id= #{storeId}
        <if test="list != null">
            and a.id in
            <foreach item="item" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>


    <select id="selectCountByParentId" parameterType="int" resultType="int">
        select count(1)
        from t_menu
        where p_id = #{parentId}
    </select>

    <select id="selectByKey" parameterType="int" resultType="Tmenu">
        select id,icon,name,url,p_id,state
        from t_menu
        where id = #{id}
    </select>

    <select id="selectByName" parameterType="Tmenu" resultType="int">
        select count(1)
        from t_menu
        where name = #{name}
        <if test="id != null">
            and id !=#{id}
        </if>

    </select>

    <select id="selectByParentIdDes" parameterType="int" resultType="Tmenu">
        select id,icon,name,url,p_id,state
        from t_menu
        where p_id = #{parentId}
        order by id desc
    </select>

    <select id="selectByState" parameterType="int" resultType="Tmenu">
        select id,icon,name,url,p_id,state
        from t_menu
        where state = #{state}
        order by id desc
    </select>

    <insert id="saveMenu" parameterType="Tmenu">
        insert into t_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="pId != null">
                p_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="icon != null">
                #{icon},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="url != null">
                '${url}',
            </if>
            <if test="pId != null">
                #{pId},
            </if>
        </trim>
    </insert>

    <update id="updateMenu" parameterType="Tmenu">
        update t_menu
        <set>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="pId != null">
                p_id = #{pId},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteByRoleMenuId" parameterType="int">
        delete
        from t_role_menu
        where menu_id = #{id}
    </delete>

    <delete id="deleteByParentId" parameterType="int">
        delete
        from t_menu
        where p_id = #{parentId}
    </delete>

    <delete id="deleteById" parameterType="int">
        delete
        from t_menu
        where id = #{id}
    </delete>


    <select id="selectRoleList" parameterType="String" resultType="Trole">
        select id,bz,name,remarks from t_role
        where 1=1
        <if test="keyword != null">
            and name like CONCAT('%',#{keyword},'%')
        </if>
    </select>

    <select id="selectRoleByName" parameterType="String" resultType="int">
        select count(1)
        from t_role
        where name = #{name}
    </select>

    <insert id="saveRole" parameterType="Trole">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bz != null">
                bz,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="bz != null">
                #{bz},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="remarks != null">
                #{remarks},
            </if>
        </trim>
    </insert>

    <select id="selectRoleById" parameterType="int" resultType="Trole">
        select id,bz,name,remarks
        from t_role
        where id = #{id}
    </select>

    <update id="updateRole" parameterType="Trole">
        update t_role
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="bz != null">
                bz = #{bz},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteRoleUserByRoleId" parameterType="int">
        delete
        from t_user_role
        where role_id = #{id}
    </delete>

    <delete id="deleteRoleMenuByRoleId" parameterType="int">
        delete
        from t_role_menu
        where role_id = #{id}
    </delete>

    <delete id="deleteRoleById" parameterType="int">
        delete
        from t_role
        where id = #{id}
    </delete>

    <select id="selectMenusByRoleId" parameterType="int" resultType="Tmenu">
        select a.id,a.icon,a.name,a.url,a.p_id,a.state
        from t_menu a,
             t_role_menu b,
             t_role c
        where a.id = b.menu_id
          and b.role_id = c.id
          and c.id = #{id}
    </select>

    <insert id="saveRoleMenu" parameterType="Trolemenu">
        insert into t_role_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="menuId != null">
                menu_id,
            </if>
            <if test="roleId != null">
                role_id
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="menuId != null">
                #{menuId},
            </if>
            <if test="roleId != null">
                #{roleId}
            </if>
        </trim>
    </insert>

    <select id="selectRolesByUserId" parameterType="int" resultType="Trole">
        select
            c.id,
            c.bz,
            c.name,
            c.remarks
        from t_user a,
             t_user_role b,
             t_role c
        where a.id = b.user_id
          and b.role_id = c.id
          and a.id = #{userId}

    </select>

    <select id="selectAdminUserListCompany" parameterType="Map" resultType="Tuser">
        select
        id,bz,password,true_name,user_name,remarks,store_id,company_id,company_type,is_super_admin
        from t_user
        where 1=1
        and company_type = '1'
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="keywords != null">
            and a.true_name like CONCAT('%',#{keywords},'%')
        </if>
        <if test="sord != null">
            order by ${sord}
        </if>
    </select>

    <select id="selectAdminUserListSubCompany" parameterType="Map" resultType="Tuser">
        select
        id,bz,password,true_name,user_name,remarks,store_id,company_id,company_type,is_super_admin
        from t_user
        where 1=1
        and company_type = '2'
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="keywords != null">
            and true_name like CONCAT('%',#{keywords},'%')
        </if>
        <if test="sord != null">
            order by ${sord}
        </if>
    </select>

    <select id="selectAdminUserListStore" parameterType="Map" resultType="Tuser">
        select
        id,bz,password,true_name,user_name,remarks,store_id,company_id,company_type,is_super_admin
        from t_user
        where 1=1
        and company_type = '3'
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="keywords != null">
            and true_name like CONCAT('%',#{keywords},'%')
        </if>
        <if test="sord != null">
            order by ${sord}
        </if>
    </select>

    <select id="selectAdminUserListAllCompany" parameterType="Map" resultType="Tuser">
        select
        id,bz,password,true_name,user_name,remarks,store_id,company_id,company_type,is_super_admin
        from t_user
        where 1=1
        <if test="keywords != null">
            and true_name like CONCAT('%',#{keywords},'%')
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="companyType != null">
            and company_type = #{companyType}
        </if>
        <if test="userId != null">
            and id = #{userId}
        </if>
        <if test="sord != null">
            order by ${sord}
        </if>
    </select>

    <select id="selectByUserName" parameterType="Map" resultType="Tuser">
        select
        id,
        bz,
        password,
        store_id,
        true_name,
        user_name,
        company_id,
        company_type,
        is_super_admin,
        remarks
        from t_user
        where user_name = #{userName}
        and company_type != '3'
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="companyType != null">
            and company_type = #{companyType}
        </if>

    </select>

    <select id="selectStoreUserByUserNameAndStoreCode" parameterType="Tuser" resultType="Tuser">
        select
        id,
        bz,
        is_super_admin,
        company_id,
        company_type,
        password,
        true_name,
        user_name,
        store_id,
        remarks
        from t_user
        where 1=1
        <if test="userName != null">
            and user_name = #{userName}
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="companyType != null">
            and company_type = #{companyType}
        </if>
    </select>

    <insert id="saveAdminUser" parameterType="Tuser">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bz != null">
                bz,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="trueName != null">
                true_name,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="companyType != null">
                company_type,
            </if>
            <if test="isSuperAdmin != null">
                is_super_admin,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="bz != null">
                #{bz},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="trueName != null">
                #{trueName},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="storeId != null">
                #{storeId},
            </if>
            <if test="companyId != null">
                #{companyId},
            </if>
            <if test="companyType != null">
                #{companyType},
            </if>
            <if test="isSuperAdmin != null">
                #{isSuperAdmin},
            </if>
            <if test="remarks != null">
                #{remarks},
            </if>
        </trim>
    </insert>

    <select id="selectById" parameterType="int" resultType="Tuser">
        select
            id,
            bz,
            password,
            true_name,
            user_name,
            company_id,
            company_type,
            store_id,
            is_super_admin,
            remarks
        from t_user
        where id = #{userId}
    </select>

    <update id="updateAdminUser" parameterType="Tuser">
        update t_user
        <set>
            <if test="bz != null">
                bz = #{bz},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="trueName != null">
                true_name = #{trueName},
            </if>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="storeId != null">
                store_id = #{storeId},
            </if>
            <if test="companyId != null">
                company_id = #{companyId},
            </if>
            <if test="companyType != null">
                company_type = #{companyType},
            </if>
            <if test="isSuperAdmin != null">
                is_super_admin = #{isSuperAdmin},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteUserRole" parameterType="int">
        delete
        from t_user_role
        where user_id = #{userId}
    </delete>

    <delete id="deleteUser" parameterType="int">
        delete
        from t_user
        where id = #{userId}
    </delete>


    <delete id="deleteuserByCompany" parameterType="Tuser">
        delete
        from t_user
        where 1=1
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="companyType != null">
            and company_type = #{companyType}
        </if>
    </delete>

    <insert id="saveUserRole" parameterType="Tuserrole">
        insert into t_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="userId != null">
                user_id
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="userId != null">
                #{userId}
            </if>
        </trim>
    </insert>

    <select id="selectAdminUser" parameterType="Tuser" resultType="Tuser">
        select id,
               bz,
               password,
               true_name,
               user_name,
               remarks,
               store_id,
               company_id,
               company_type,
               is_super_admin
        from t_user
        where user_name = #{userName}
          and password = #{oldPassword}
    </select>


    <select id="selectStoreAdminUserList" parameterType="Map" resultType="TStoreUser">
        select
        id,bz,password,true_name,user_name,remarks,store_id,store_code
        from t_store_user
        where 1=1
        <if test="keywords != null">
            and true_name like CONCAT('%',#{keywords},'%')
        </if>
        <if test="isPlat == 0">
            and user_name != "admin"
        </if>
        and locate(#{storeId},store_id)
        <if test="sord != null">
            order by ${sord}
        </if>

    </select>

    <select id="selectByStoreUserName" parameterType="Map" resultType="TStoreUser">
        select
            id,
            bz,
            password,
            store_id,
            store_code,
            true_name,
            user_name,
            remarks
        from t_store_user
        where user_name = #{userName}
    </select>

    <select id="selectStoreUserById" parameterType="int" resultType="TStoreUser">
        select
            id,
            bz,
            password,
            true_name,
            user_name,
            store_id,
            store_code,
            remarks
        from t_store_user
        where id = #{userId}
    </select>

    <update id="updateStoreAdminUser" parameterType="TStoreUser">
        update t_store_user
        <set>
            <if test="bz != null">
                bz = #{bz},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="trueName != null">
                true_name = #{trueName},
            </if>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="storeId != null">
                store_id = #{storeId},
            </if>
            <if test="userName != null">
                store_code = #{storeCode},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="saveStoreAdminUser" parameterType="TStoreUser">
        insert into t_store_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bz != null">
                bz,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="storeCode != null">
                store_code,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="trueName != null">
                true_name,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="bz != null">
                #{bz},
            </if>
            <if test="storeId != null">
                #{storeId},
            </if>
            <if test="storeCode != null">
                #{storeCode},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="trueName != null">
                #{trueName},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="remarks != null">
                #{remarks},
            </if>
        </trim>
    </insert>

    <delete id="deleteStoreUser" parameterType="int">
        delete
        from t_store_user
        where id = #{userId}
    </delete>

    <select id="selectStoreRolesByUserId" parameterType="Map" resultType="TStoreRole">
        select
            c.id,
            c.bz,
            c.is_super_admin,
            c.name,
            c.store_id,
            c.remarks
        from t_store_user a,
             t_store_user_role b,
             t_store_role c
        where a.id = b.user_id
          and b.role_id = c.id
          and a.id = #{userId}
          and b.store_id = #{storeId}
    </select>

    <select id="selectStoreRoleList" parameterType="Map" resultType="TStoreRole">
        select id,bz,name,remarks,store_id,is_super_admin from t_store_role
        where 1=1
        <if test="keyword != null">
            and name like CONCAT('%',#{keyword},'%')
        </if>
        and store_id = #{storeId}
    </select>

    <delete id="deleteStoreUserRole" parameterType="Map">
        delete
        from t_store_user_role
        where user_id = #{userId}
        <if test="storeId != null and storeId!=''">
            and store_id = #{storeId}
        </if>
    </delete>

    <insert id="saveStoreUserRole" parameterType="TStoreuserrole">
        insert into t_store_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            store_id
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            #{storeId}
        </trim>
    </insert>

    <select id="selectStoreRoleByName" parameterType="String" resultType="int">
        select count(1)
        from t_store_role
        where name = #{name}
    </select>

    <insert id="saveStoreRole" parameterType="TStoreRole">
        insert into t_store_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bz != null">
                bz,
            </if>
            <if test="isSuperAdmin != null">
                is_super_admin,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="bz != null">
                #{bz},
            </if>
            <if test="isSuperAdmin != null">
                #{isSuperAdmin},
            </if>
            <if test="storeId != null">
                #{storeId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="remarks != null">
                #{remarks},
            </if>
        </trim>
    </insert>

    <select id="selectStoreRoleById" parameterType="int" resultType="TStoreRole">
        select id,bz,name,remarks,store_id,is_super_admin
        from t_store_role
        where id = #{id}
    </select>

    <update id="updateStoreRole" parameterType="TStoreRole">
        update t_store_role
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="bz != null">
                bz = #{bz},
            </if>
            <if test="isSuperAdmin != null">
                is_super_admin = #{isSuperAdmin},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteStoreRoleUserByRoleId" parameterType="int">
        delete
        from t_store_user_role
        where role_id = #{id}
    </delete>

    <delete id="deleteStoreRoleMenuByRoleId" parameterType="int">
        delete
        from t_store_role_menu
        where role_id = #{id}
    </delete>

    <delete id="deleteStoreRoleById" parameterType="int">
        delete
        from t_store_role
        where id = #{id}
    </delete>

    <select id="selectStoreMenusByRoleId" parameterType="Map" resultType="TStoreMenu">
        select a.id,
               a.icon,
               a.name,
               a.url,
               a.p_id,
               a.state,
               a.store_id,
               a.is_super_menu
        from t_store_menu a,
             t_store_role_menu b,
             t_store_role c
        where a.id = b.menu_id
          and b.role_id = c.id
          and c.id = #{id}
          and b.store_id = #{storeId}
    </select>

    <select id="selectStoreCountByParentId" parameterType="Map" resultType="int">
        select count(1)
        from t_store_menu
        where p_id = #{parentId}
          and store_id = #{storeId}
    </select>

    <select id="selectStoreTMenu" parameterType="Map" resultType="TStoreMenu">
        select *
        from t_store_menu
        where 1=1
        <if test="pId != null and pId != ''">
            and p_id = #{pId}
        </if>
        <if test="storeId != null and storeId != ''">
            and store_id = #{storeId}
        </if>
    </select>

    <select id="selectStoreMenuByKey" parameterType="Map" resultType="TStoreMenu">
        select id,
               icon,
               name,
               url,
               p_id,
               state,
               store_id,
               is_super_menu
        from t_store_menu
        where id = #{id}
          and store_id = #{storeId}
    </select>

    <select id="selectStoreMenuByName" parameterType="TStoreMenu" resultType="int">
        select count(1)
        from t_store_menu
        where name = #{name}
        <if test="id != null">
            and id !=#{id}
        </if>
        and store_id = #{storeId}
    </select>

    <select id="selectStoreMenuByParentIdDes" parameterType="Map" resultType="TStoreMenu">
        select id,icon,name,url,p_id,state,is_super_menu
        from t_store_menu
        where p_id = #{id}
          and store_id = #{storeId}
        order by id desc
    </select>

    <insert id="saveStoreMenu" parameterType="TStoreMenu">
        insert into t_store_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="isSuperMenu != null">
                is_super_menu,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="pId != null">
                p_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="icon != null">
                #{icon},
            </if>
            <if test="isSuperMenu != null">
                #{isSuperMenu},
            </if>
            <if test="storeId != null">
                #{storeId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="url != null">
                '${url}',
            </if>
            <if test="pId != null">
                #{pId},
            </if>
        </trim>
    </insert>

    <update id="updateStoreMenu" parameterType="TStoreMenu">
        update t_store_menu
        <set>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="pId != null">
                p_id = #{pId},
            </if>
        </set>
        where id = #{id}
        and store_id = #{storeId}
    </update>

    <delete id="deleteByStoreRoleMenuId" parameterType="Map">
        delete
        from t_store_role_menu
        where menu_id = #{id}
          and store_id = #{storeId}
    </delete>

    <delete id="deleteByStoreParentId" parameterType="Map">
        delete
        from t_store_menu
        where p_id = #{parentId}
          and store_id = #{storeId}
    </delete>

    <delete id="deleteByStoreId" parameterType="Map">
        delete
        from t_store_menu
        where id = #{id}
          and store_id = #{storeId}
    </delete>

    <insert id="saveStoreRoleMenu" parameterType="TStorerolemenu">
        insert into t_store_role_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="menuId != null">
                menu_id,
            </if>
            <if test="roleId != null">
                role_id
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="storeId != null">
                #{storeId},
            </if>
            <if test="menuId != null">
                #{menuId},
            </if>
            <if test="roleId != null">
                #{roleId}
            </if>
        </trim>
    </insert>

    <select id="selectStoreByParentId" parameterType="Map" resultType="TStoreMenu">
        select id,icon,name,url,p_id,state,store_id,is_super_menu
        from
        t_store_menu
        where
        p_id = #{pId}
        <if test="storeId != null">
            and store_id= #{storeId}
        </if>
    </select>

    <select id="selectSuperAdminUserId" resultType="TStoreUser" parameterType="Map">
        select c.id
        from
            t_store_role a,
            t_store_user_role b,
            t_store_user c
        where a.id = b.role_id
          and b.user_id = c.id
          and a.is_super_admin = 1
          and a.store_id = #{storeId}
    </select>

    <select id="selectRoleMenuList" resultType="Trolemenu">
        select id,menu_id,role_id
        from
            t_role_menu
        where 1 = 1
    </select>
</mapper>