<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="evaluatingLevel" >
  <resultMap id="EvaluatingLevelMAP" type="com.lnmj.data.entity.EvaluatingLevel" >
    <id column="EvaluatingLevelID" property="evaluatingLevelID" jdbcType="BIGINT" />
    <result column="EvaluatingLevelName" property="evaluatingLevelName" jdbcType="VARCHAR" />
    <result column="EvaluatingLevelEvaluatingID" property="evaluatingLevelEvaluatingID" jdbcType="BIGINT" />
    <result column="EvaluatingLevelLower" property="evaluatingLevelLower" jdbcType="INTEGER" />
    <result column="EvaluatingLevelDate" property="evaluatingLevelDate" jdbcType="INTEGER" />
    <result column="Remark" property="remark" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreateOperator" property="createOperator" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ModifyOperator" property="modifyOperator" jdbcType="VARCHAR" />
    <result column="DataChange_LastTime" property="dataChangeLastTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="base_EvaluatingLevel_column" >
    EvaluatingLevelID, EvaluatingLevelName, EvaluatingLevelEvaluatingID, EvaluatingLevelLower, 
    EvaluatingLevelDate, Remark, Status, CreateOperator, CreateTime, ModifyOperator, 
    DataChange_LastTime
  </sql>

  <!--根据客户评测ID插入客户评测等级-->
  <insert id="insertEvaluatingLevelList" parameterType="List" keyProperty="ladderID" useGeneratedKeys="true">
    insert into e_evaluatinglevel(EvaluatingLevelName, EvaluatingLevelEvaluatingID, EvaluatingLevelLower,
    EvaluatingLevelDate, Remark, Status, CreateOperator, CreateTime, ModifyOperator,DataChange_LastTime)
    values
    <foreach collection="evaluatingLevelList" item="item" index="index" separator=",">
      <trim suffix=")" prefix="(" suffixOverrides=",">
        <if test="item.evaluatingLevelName != null" >
          #{item.evaluatingLevelName,jdbcType=VARCHAR},
        </if>
        <if test="item.evaluatingLevelName == null" >
          "",
        </if>
        <if test="item.evaluatingLevelEvaluatingID != null" >
          #{item.evaluatingLevelEvaluatingID,jdbcType=BIGINT},
        </if>
        <if test="item.evaluatingLevelLower != null" >
          #{item.evaluatingLevelLower,jdbcType=INTEGER},
        </if>
        <if test="item.evaluatingLevelLower == null" >
          0,
        </if>
        <if test="item.evaluatingLevelDate != null" >
          #{item.evaluatingLevelDate,jdbcType=INTEGER},
        </if>
        <if test="item.evaluatingLevelDate == null" >
          0,
        </if>
        <if test="item.remark != null" >
          #{item.ladderBonus,jdbcType=VARCHAR},
        </if>
        <if test="item.remark == null" >
          "",
        </if>
        <if test="item.status != null" >
          #{item.status,jdbcType=INTEGER},
        </if>
        <if test="item.status == null" >
          1,
        </if>
        <if test="item.createOperator != null" >
          #{item.createOperator,jdbcType=VARCHAR},
        </if>
        <if test="item.createOperator == null" >
          "",
        </if>
        <if test="item.createTime != null" >
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime != null" >
          NOW(),
        </if>
        <if test="item.modifyOperator != null" >
          #{item.modifyOperator,jdbcType=VARCHAR},
        </if>
        <if test="item.modifyOperator == null" >
          "",
        </if>
        <if test="item.dataChangeLastTime != null" >
          #{item.dataChangeLastTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.dataChangeLastTime == null" >
          NOW(),
        </if>
      </trim>
    </foreach>
  </insert>

  <!--根据客户评测ID更新客户评测等级-->
  <update id="updateEvaluatingLevelList"  parameterType="List">
    update e_evaluatinglevel
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="EvaluatingLevelEvaluatingID = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.evaluatingLevelEvaluatingID != null">
            when id=#{item.evaluatingLevelID} then #{item.evaluatingLevelEvaluatingID}
          </if>
        </foreach>
      </trim>
      <trim prefix="EvaluatingLevelName = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.evaluatingLevelName != null">
            when id=#{item.evaluatingLevelID} then #{item.evaluatingLevelName}
          </if>
        </foreach>
      </trim>
      <trim prefix="EvaluatingLevelLower = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.evaluatingLevelLower != null">
            when id=#{item.evaluatingLevelID} then #{item.evaluatingLevelLower}
          </if>
        </foreach>
      </trim>
      <trim prefix="EvaluatingLevelDate = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.evaluatingLevelDate != null">
            when id=#{item.evaluatingLevelID} then #{item.evaluatingLevelDate}
          </if>
        </foreach>
      </trim>
      <trim prefix="Remark = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.remark != null">
            when id=#{item.evaluatingLevelID} then #{item.remark}
          </if>
        </foreach>
      </trim>
      <trim prefix="ModifyOperator = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.modifyOperator != null">
            when id=#{item.evaluatingLevelID} then #{item.modifyOperator}
          </if>
        </foreach>
      </trim>
      <trim prefix="DataChange_LastTime = case" suffix="end,">
        <foreach collection="evaluatingLevelList" item="item">
          <if test="item.dataChangeLastTime != null">
            when id=#{item.evaluatingLevelID} then #{item.dataChangeLastTime}
          </if>
        </foreach>
      </trim>
    </trim>
  </update>

  <!--根据客户评测ID删除客户评测等级-->
  <update id="deleteEvaluatingLevelByEvaluatingID" parameterType="EvaluatingLevel" >
    update e_evaluatinglevel set  Status = 0,ModifyOperator = #{modifyOperator,jdbcType=VARCHAR}
    where EvaluatingLevelEvaluatingID = #{evaluatingLevelEvaluatingID,jdbcType=BIGINT}
  </update>

  <select id="selectEvaluatingLevelList" resultMap="EvaluatingLevelMAP">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="base_EvaluatingLevel_column" />
    from e_evaluatinglevel where Status=1
  </select>

  <select id="selectEvaluatingLevelByID" resultMap="EvaluatingLevelMAP" parameterType="java.lang.Long" >
    select 
    <include refid="base_EvaluatingLevel_column" />
    from e_evaluatinglevel
    where EvaluatingLevelID = #{evaluatingLevelID,jdbcType=BIGINT}
  </select>

  <select id="selectEvaluatingLevelByCondition" resultMap="EvaluatingLevelMAP" parameterType="com.lnmj.data.entity.EvaluatingLevel" >
    select
    <include refid="base_EvaluatingLevel_column" />
    from e_evaluatinglevel
    <where>
        <trim prefix="" prefixOverrides="AND">
          <if test="evaluatingLevelID != null">
            AND EvaluatingLevelID = #{evaluatingLevelID,jdbcType=BIGINT}
          </if>
          <if test="evaluatingLevelName != null" >
            AND EvaluatingLevelName = #{evaluatingLevelName,jdbcType=VARCHAR}
          </if>
          <if test="evaluatingLevelEvaluatingID != null" >
            AND EvaluatingLevelEvaluatingID = #{evaluatingLevelEvaluatingID,jdbcType=BIGINT}
          </if>
          <if test="evaluatingLevelLower != null" >
            AND EvaluatingLevelLower = #{evaluatingLevelLower,jdbcType=INTEGER}
          </if>
          <if test="evaluatingLevelDate != null" >
            AND EvaluatingLevelDate = #{evaluatingLevelDate,jdbcType=INTEGER}
          </if>
          <if test="remark != null" >
            AND  Remark = #{remark,jdbcType=VARCHAR}
          </if>
          <if test="status != null" >
            AND Status = #{status,jdbcType=INTEGER}
          </if>
          <if test="status == null" >
            AND Status = 1
          </if>
          <if test="createOperator != null" >
            AND CreateOperator = #{createOperator,jdbcType=VARCHAR}
          </if>
          <if test="createTime != null" >
            AND CreateTime = #{createTime,jdbcType=TIMESTAMP}
          </if>
          <if test="modifyOperator != null" >
            AND ModifyOperator = #{modifyOperator,jdbcType=VARCHAR}
          </if>
          <if test="dataChangeLastTime != null" >
            AND DataChange_LastTime = #{dataChangeLastTime,jdbcType=TIMESTAMP}
          </if>
        </trim>
    </where>
    order by EvaluatingLevelLower asc
  </select>

  <update id="deleteEvaluatingLevelByID" parameterType="com.lnmj.data.entity.EvaluatingLevel" >
    update e_evaluatinglevel set  Status = 0,ModifyOperator = #{modifyOperator,jdbcType=VARCHAR}
    where EvaluatingLevelID = #{evaluatingLevelID,jdbcType=BIGINT}
  </update>

  <insert id="insertEvaluatingLevel" parameterType="com.lnmj.data.entity.EvaluatingLevel" keyProperty="evaluatingLevelID" useGeneratedKeys="true" >
    insert into e_evaluatinglevel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="evaluatingLevelID != null" >
        EvaluatingLevelID,
      </if>
      <if test="evaluatingLevelName != null" >
        EvaluatingLevelName,
      </if>
      <if test="evaluatingLevelEvaluatingID != null" >
        EvaluatingLevelEvaluatingID,
      </if>
      <if test="evaluatingLevelLower != null" >
        EvaluatingLevelLower,
      </if>
      <if test="evaluatingLevelDate != null" >
        EvaluatingLevelDate,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createOperator != null" >
        CreateOperator,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="modifyOperator != null" >
        ModifyOperator,
      </if>
      <if test="dataChangeLastTime != null" >
        DataChange_LastTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="evaluatingLevelID != null" >
        #{evaluatingLevelID,jdbcType=BIGINT},
      </if>
      <if test="evaluatingLevelName != null" >
        #{evaluatingLevelName,jdbcType=VARCHAR},
      </if>
      <if test="evaluatingLevelEvaluatingID != null" >
        #{evaluatingLevelEvaluatingID,jdbcType=BIGINT},
      </if>
      <if test="evaluatingLevelLower != null" >
        #{evaluatingLevelLower,jdbcType=INTEGER},
      </if>
      <if test="evaluatingLevelDate != null" >
        #{evaluatingLevelDate,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createOperator != null" >
        #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyOperator != null" >
        #{modifyOperator,jdbcType=VARCHAR},
      </if>
      <if test="dataChangeLastTime != null" >
        #{dataChangeLastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateEvaluatingLevelByID" parameterType="com.lnmj.data.entity.EvaluatingLevel" >
    update e_evaluatinglevel
    <set >
      <if test="evaluatingLevelName != null" >
        EvaluatingLevelName = #{evaluatingLevelName,jdbcType=VARCHAR},
      </if>
      <if test="evaluatingLevelEvaluatingID != null" >
        EvaluatingLevelEvaluatingID = #{evaluatingLevelEvaluatingID,jdbcType=BIGINT},
      </if>
      <if test="evaluatingLevelLower != null" >
        EvaluatingLevelLower = #{evaluatingLevelLower,jdbcType=INTEGER},
      </if>
      <if test="evaluatingLevelDate != null" >
        EvaluatingLevelDate = #{evaluatingLevelDate,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createOperator != null" >
        CreateOperator = #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyOperator != null" >
        ModifyOperator = #{modifyOperator,jdbcType=VARCHAR},
      </if>
      <if test="dataChangeLastTime != null" >
        DataChange_LastTime = #{dataChangeLastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where EvaluatingLevelID = #{evaluatingLevelID,jdbcType=BIGINT}
  </update>
</mapper>